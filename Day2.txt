15.207.51.165
===============================
Container
	COMPUTE
	------------
		net
		vol
		env
		port
		memory
		cpu
		block
		eth
	
======================================
docker help run
======================================
docker run -d --net=dev jenkins
docker run -d --ip=d.d.d.d jenkins
=================================================
https://www.devopsschool.com/tutorial/docker/commands/index.html
==============================================
cp  
	copy a files/dir from host to container
	container to host

 217  touch devopsschool.txt
  218  kls
  219  ls
  220  docker ps
  221  docker cp devopsschool.txt 5ac865ee229d:/opt
  222  docker exec 5ac865ee229d ls /opt
  223  ls
  224  rm -rf devopsschool.txt
  225  clear
  226  ls
  227  docker cp 5ac865ee229d:/opt/devopsschool.txt .
  228  ls

================================
How to exit a container without Stopping?
-------------------------------------
CTRl + P + Q

 199  docker help run

  205  docker ps
  206  clear
  207  clear
  208  docker run -it ubuntu
  209  docker ps
  210  docker run -itd ubuntu
  211  docker ps

===================================
diff	Inspect changes to files or directories on a container's filesystem
===================================
	Would tell you
	files/dir		
			ADDED
			CHANGED/Modified
			DELETE
		After a container got created

  231  clear
  232  docker ps
  233  docker attach 5ac865ee229d
  234  docker ps
  235  docker diff 5ac865ee229d
  236  history

  238  docker ps
  239  docker port 5ac865ee229d
  240  docker port e5cfa6396267
  241  docker run -d -p 8080:8080 jenkins
  242  docker ps
  243  docker port e16e1ea25b29
  244  history

 244  history
  245  clear
  246  docker ps
  247  docker rename 5ac865ee229d dev2
  248  docker ps
  249  docker rename ed123fd7084c dev3
  250  docker ps
  251  clear
  252  docker run -d --name ramukaka jenkins
  253  docker ps

logs	Fetch the logs of a container (PID1)
==============


 255  clear
  256  docker ps
  257  docker logs 7f0e1dec7b28
  258  clear
  259  docker ps
  260  docker logs 5ac865ee229d
  261  docker ps
  262  clear
  263* docker p
  264  docker logs ed123fd7084c
  265  watch docker logs ed123fd7084c
  266  clear
  267  clear
  268  dcoker stats
  269  docker stats
  270  docker stats ed123fd7084c
  271  history

  267  clear
  268  dcoker stats
  269  docker stats
  270  docker stats ed123fd7084c
  271  history
  272  clear
  273  docker ps
  274  docker top 7f0e1dec7b28
  275  ps -eaf | grep jenkins.sh
  276  history
[root@ip-172-31-

 273  docker ps
  274  docker top 7f0e1dec7b28
  275  ps -eaf | grep jenkins.sh
  276  history
  277  clear
  278  docker events
  279  history

ASSIGNMENT
===================
update	Update configuration of one or more containers
wait	Block until one or more containers stop, then print their exit codes


Anatomy of Images
===============================

 210  docker ps -a
  211  docker stop $(docker ps -a -q)
  212  clear
  213  docker rm $(docker ps -a -q)
  214  clear
  215  docker ps -a
  216  docker images
  217  docker rmi ubuntu jenkins
  218  clear
  219  docker images
  220  docker info
  221  cd /var/lib/docker
  222  clear
  223  ls
  224  ls -1
  225  pwd
  226  cd overlay2
  227  clear
  228  ls
  229  du -sh .
  230  docker pull ubuntu
  231  ls
  232  clear
  233  ls
  234  docker history ubuntu
  235  ls
  236  du -h --max-depth=1
  237  clear
  238  docker inspect ubuntu
  239  ls
  240  clear
  241  du -h --max-depth=1
  242  cd ./c4a2a894546440eb5b5f1affedb860675431a67cfa3cba2dc556b4feed36931c
  243  ls
  244  clear
  245  ls
  246  cd diff/
  247  ls
  248  clear
  249  pwd
  250  ls
  251  cd ..
  252  ls
  253  cd ..
  254  ls
  255  clear
  256  ls
  257  df -kh
  258  docker run -itd ubuntu
  259  ls
  260  du -sh 4a956ea666631997d988af73defbf537983b24cf3d51869e0b2e199c0f5ab744
  261  du -sh 4a956ea666631997d988af73defbf537983b24cf3d51869e0b2e199c0f5ab744-init
  262  clear
  263  ls
  264  df -kh
  265  cd /var/lib/docker/overlay2/4a956ea666631997d988af73defbf537983b24cf3d51869e0b2e199c0f5ab744/merged
  266  ls
  267  cd ..
  268  clear
  269  ls
  270  docker ps
  271  docker stop 844f74c3357a
  272  cd ..
  273  ls
  274  clear
  275  ls
  276  cd 4a956ea666631997d988af73defbf537983b24cf3d51869e0b2e199c0f5ab744
  277  ls
  278  docker start 844f74c3357a
  279  ls
  280  df -kh
  281  docker start 844f74c3357a
  282  df -kh
  283  clear
  284  docker stop 844f74c3357a
  285  ls
  286  df -kh
  287  docker start 844f74c3357a
  288  ls
  289  cd ..
  290  ls
  291  clear
  292  docker ps
  293  docker exec 844f74c3357a touch /opt/rajesh.txt'
  294  docker exec 844f74c3357a touch /opt/rajesh.txt
  295  docker exec 844f74c3357a ls /opt/
  296  find . -name rajesh.txt
  297  docker stop 844f74c3357a
  298  find . -name rajesh.txt
  299  docker start 844f74c3357a
  300  find . -name rajesh.txt
==============================================================
==============================================================

How to create a Docker image?
====================================
1. Using Existing Container

Base - Ubuntu	- DONE
- git		- DONE
- java		- DONE
- http	- 
===============
65.0.93.156


inside a container of ubuntu
===========================
  1  apt-get install git
    2  apt-get update
    3  clear
    4  apt-get install git
    5  clear
    6  git
    7  clear
    8  java
    9  apt-get install openjdk-8-jdk
   10  clear
   11  java
   22  apt-get install apache2
   23  clear
   24  which git
   25  which hava
   26  which java
   27  which apache2
   28  pwd


407  docker run -it ubuntu
  408  docker ps
  409  docker exec b202f75b9cef git
  410  docker exec b202f75b9cef javae
  411  clear
  412  docker exec b202f75b9cef java
  413  clear
  414  docker ps
  415  docker commit -m"ub-up-git-java-ap" -a"Rajesh kumar" b202f75b9cef ub-up-git-java-ap
  416  docker images
  417  docker history ubuntu
  418  docker history ub-up-git-java-ap
=================================================
How to share an image?
-----------------------------------
1. Using Tar ball

464  docker images
  465  docker save -o ub-up-git-java-ap.tar ub-up-git-java-ap
  466  ls
  467  docker ps -a
  468  docker stop b72170108d54
  469  docker rm b72170108d54
  470  docker images
  471  docker rmi ub-up-git-java-ap
  472  clear
  473  docker images
  474  ls
  475  docker load -i ub-up-git-java-ap.tar
  476  docker images
  477  docker run -itd ub-up-git-java-ap.
  478  docker run -itd ub-up-git-java-ap
  479  do0
  480  clear
  481  docker ps


2. Using hub.docker.com
Step 1 - Register & Validate at hub.docker.com
Step 2 - Login to hub.docker.com
Step 3 - Create a empty repo

Step 4 - MAKE SURE image in Local registry &&& repository at hub.docker.com MUST match
Step 5 - docker login
Step 6 - docker push

 488  docker images
  489  clear
  490  docker images
  491  docker tag ub-up-git-java-apdevopsschools/mangal-ub-up-git-java-ap
  492  docker tag ub-up-git-java-ap devopsschools/mangal-ub-up-git-java-ap
  493  clear
  494  docker images
  495  docker login 
  496  docker push devopsschools/mangal-ub-up-git-java-ap
  497  history


3. Using Pvt registry i.e - artifactory
https://www.devopsschool.com/blog/?s=artifactory

==============================================
Docker Volume?
=============================
https://www.devopsschool.com/blog/understand-docker-volume-from-beginner-to-deep-dive-level/
Prb -  Containers data are emph*

Solution - Docker Volume
------------------------------------
Volume is a way to store a data beyond life of containers.

Docker Volume
		volume	/var/lib/docker/volumes
		mnt	- Any location in Host Machine
		tmfs	- Stored in memory

 443  ls
  444  docker volume
  445  docker volume prune
  446  y
  447  clear
  448  docker volume ls
  449* l
  450  docker volume
  451  docker volume create dev
  452  clear
  453  ls
  454  docker volume create qa
  455  docker volume ls
  456  docker volume rm qa
  457  docker volume ls
  458  docker volume create qa
  459  clear
  460  ls
  461  cd dev/
  462  ls
  463  cd _data/
  464  ls
  465  clear
  466  ls
  467  cd ..
  468  ls
  469  cd ..
  470  ls
  471  docker volume inspect dev
  472  clear
  473  docker run -itd -v dev:/opt/raju ubuntu
  474  docker ps
  475  docker exec 8fb2ceda4f17 df -kh
  476  clear
  477  docker exec 8fb2ceda4f17 touch /opt/raju/rrr
  478  docker exec 8fb2ceda4f17 ls /opt/raju
  479  ls
  480  cd dev/
  481  ls
  482  clear
  483  ls
  484  cd _data/
  485  ;ls
  486  clear
  487  ls
  488  touch ffdfff
  489  docker exec 8fb2ceda4f17 ls /opt/raju
  490  pwd
  491  cd ..
  492  ls
  493  clear
  494  ls
  495  cd ..
  496  ls
  497  docker ps
  498  docker stop 8fb2ceda4f17
  499  docker rm 8fb2ceda4f17
  500  clear
  501  ls
  502  cd dev/
  503  ls
  504  cd _data/
  505  ls
  506  docker run -itd -v dev:/opt/ramu -v qa:/opt/qa ubuntu
  507  docker
  508  clear
  509  docker ps
  510  docker exec 8917dcec8224 ls /opt
  511  docker exec 8917dcec8224 ls /opt/ramu


  524  docker run -itd -v /opt/bkp:/opt/rrr ubuntu
  525  ls
  526  touch ramu.txt
  527  docker ps
  528  docker exec 57b40bcb3a96 ls /opt/rrr
  529  docker exec 57b40bcb3a96 touch /opt/rrr/gggg
  530  ls
  531  history

================
2. Using Dockefile
=================================================
















