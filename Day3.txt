Docker Compose		Demo + Lab
Dockerfile
Docker Toolbox
=====================	
Docker Cloud -== hub.docker.com
		docker enterprise - swarm ++++ == TRIAL in cloud
					

	Docker Enterprise
===========================
https://www.devopsschool.com/blog/difference-between-docker-community-edition-ce-vs-docker-enterprise-edition-ee-in-2020/
https://www.devopsschool.com/blog/what-is-docker-enterprise-3-0-detailed-exaplanations/
=================================================================================
What is Dockerfile

What is Dockefile?
==============================
	FILE
	Contains
		Instructions

	FROM
	MAINTAINER
	RUN
	COPY
	ARG
	ENV
	VOL
	USER
	EXPOSE
	ADD

	CMD
	ENTRYPOINT
===================================
	BUILD	


jenkins
	openjdk:8-jdk
		buildpack-deps:buster-scm
			buildpack-deps:buster-curl
					debian:buster
						scratch

Rule of Dockerfile
==========================
Each line of Dockerfile is creating ONE layer
Each Layer is Creating from a container of Previous Line Layer Image

=======================================================
65.0.93.156



==============dockerfile==========================
FROM ubuntu
MAINTAINER Rajesh Kumar devops@rajeshkumar.xyz
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update
RUN apt-get -y install tzdata
RUN apt-get install git -y
RUN apt-get install openjdk-8-jdk -y
RUN apt-get install apache2 -y 
ENV RAJA_HOME=/opt/ramukaka
VOLUME /opt/myvol
COPY index.html /tmp
$ docker build -t img2  .


==============doc1==========================
FROM ubuntu
MAINTAINER Rajesh Kumar devops@rajeshkumar.xyz
RUN touch /opt/rajesh1.txt
RUN touch /opt/rajesh2.txt
RUN touch /opt/rajesh2.txt
$ docker build -t img2 -f doc1 .
========================================

======================
How to run container?
How to set PID 1?
====================================================
CMD
		CMD can be replaced	
ENTRYPOINT
		ENTRYPOINT CAN NOT be replaced
===================================================
=================================


VerX ---> JAVA
VerX ---> PYTHON
======================


KERNAL	--> HOST

ROOTFS	--> Centos

			jDK
				ENV
					Tomcat 
						COPYVerX
							Set CMD or Entrypoint
						
		

Assignment
=====================
https://www.devopsschool.com/tutorial/docker/dockerfile/dockerfile-example-sample-lab.html

1. Build each image
2. Run each Image
3. Find out an answer yourself
		what about if i pUt 2 CMD
		what about if i pUt 2 Entrypoint
		what about if i pUt 1 CMD and 1 ENTRYPOINT in dockerfile

====================================
REAL WORLD
=====================
EAR apps
	inside a container
==========================
OS -> centos	DONE
JDK -> 1.8	DONE
Tomcat > 8.5	DONE	
APP > ear from ARTIFACTORY
EN - 	
APP_HOME = /opt/app
JAVA_HOME = /opt/java
================================
FROM centos
or
FROM openjdk:8-jdk
or
FROM tomcat:8.5 


FROM centos
MAINTAINER Vijay K
RUN yum update
RUN yum install java-1.8.0-openjdk -y
ADD tomcat8.5.zip /opt/tomcat
RUN curl http://1.0.5.5.5/repo/app55.ear /opt/tomcat/webapp
ENV JAVA_HOME=
ENV APP_HOME=/opt/tomcat/webapp/app
RUN set -e \
	&& nativeLines="$(catalina.sh configtest 2>&1)" \
	&& nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')" \
	&& nativeLines="$(echo "$nativeLines" | sort -u)" \
	&& if ! echo "$nativeLines" | grep -E 'INFO: Loaded( APR based)? Apache Tomcat Native library' >&2; then \
		echo >&2 "$nativeLines"; \
		exit 1; \
	fi
CMD ["catalina.sh", "run"]

===================================================
What is Docker Compose?
============================
	Tool
	for automating Dev env working with container
		Read a file(yaml)
			--- docker-compose.yaml
					has 
						services
--------------------------------------------------------------------
services
	service1(web)
		build
		image
		net
		port
		volume
		env
	service2(app)
		build
		image
		net
		port
		volume
		env
	service3(db)
		build
		image
		net
		port
		volume
		env
=========================================
	docker-compose ps
	docker-compose up

How to install it?

  665  sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  666  sudo chmod +x /usr/local/bin/docker-compose
  667  sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
  668  docker-compose --version
  669  history



674  docker-compose up -d
  675  ]clear
  676  clear
  677  docker ps
  678  clear
  679  docker-compose ps
  680  ls
  681  docker-compose
  682  clear
  683  docker-compose down
  684  docker-compose ps
  685  docker-compose up
  686  docker-compose up -d
  687  clear
  688  docker-compose ps
  689  docker-compose stop
  690  docker-compose ps
  691  docker-compose start
  692  docker-compose ps
  693  docker-compose logs

------------------------docker-compose.yaml---------------------------------------

version: '2'
services:
  wordpress:
    image: wordpress:latest # https://hub.docker.com/_/wordpress/
    ports:
      - 80:80 # change ip if required
    volumes:
      - ./wp-app:/var/www/html # Full wordpress project
      #- ./plugin-name/trunk/:/var/www/html/wp-content/plugins/plugin-name # Plugin development
      #- ./theme-name/trunk/:/var/www/html/wp-content/themes/theme-name # Theme development
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: password
    depends_on:
      - db
    networks:
      - wordpress-network
  db:
    image: mysql:latest # https://hub.docker.com/_/mysql/ - or mariadb https://hub.docker.com/_/mariadb
    ports:
      - 3306:3306 # change ip if required
    volumes:
      - ./wp-data:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: password
    networks:
      - wordpress-network
networks:
  wordpress-network:
      driver: bridge




